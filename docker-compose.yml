version: '3.8'
services:
  mongodb:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: userdb
      MONGO_INITDB_ROOT_PASSWORD: pass123
    networks:
      - network-challenge

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    depends_on:
      - mongodb
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: userdb
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass123
      ME_CONFIG_MONGODB_URL: mongodb://userdb:pass123@mongo:27017/
    networks:
      - network-challenge

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - network-challenge
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - network-challenge
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - network-challenge
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  application:
    container_name: pagamentos-challenge-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://userdb:pass123@mongo:27017/
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - mongodb
      - kafka
    links:
      - mongodb
      - kafka
    networks:
      - network-challenge

networks:
  network-challenge:
    driver: bridge